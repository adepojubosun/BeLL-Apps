var util = require('util')
var fs = require('fs')
var exec = require('child_process').exec;
var program = require('commander');
var databases = []
program
    .version('0.0.2')
    .parse(process.argv);
if (!program.args[0]) return console.log('No CouchDB URL provided. Quiting now.')
var couchUrl = program.args[0]
var nano = require('nano')(couchUrl)

function start() {
    increaseLimits()
}

// Increase Limits so couchapp push works correctly
function increaseLimits() {
    return createDummyCourses()
       
}
var n_members = 5;
var n_courses = 2; //Number of Iteration to run for courses
var n_steps = 5;
var defaultCourses = []; //Contains only CourseID and MemberList
var defaultCoursestep = []; 
var defaultCoursequestion = [];
var defaultResources = [];
var defaultMembers = [];
var defaultCourseanswer = [];

function createDummyCourses() {
  var courses = nano.db.use('courses');
  var coursestep = nano.db.use('coursestep');
  var coursequestion = nano.db.use('coursequestion');
  var members = nano.db.use('members');
  var courseanswer = nano.db.use('courseanswer');

  /***************Members***************/
    //First you need to create Member:

  for(var member = 0; member < n_members; member++){
    participation = member + 1;
    if(member< parseInt(n_members/2)){
      defaultMembers.push({
        "login": "member" + participation,
        "kind": "Member",
        "roles": ["Manager"],
        "firstName": "Member " + participation,
        "lastName": "Member " + participation,
        "password": "password",
        "Gender": "Male",
        "status": "active",
        "email": "member" + participation + ".somalia@olebell.org",
        "visits": 0,
        "BirthDate": "01/01/1985"
      });
    }else{
      defaultMembers.push({
        "login": "member" + participation,
        "kind": "Member",
        "roles": ["Learner"],
        "firstName": "Member " + participation,
        "lastName": "Member " + participation,
        "password": "password",
        "Gender": "Male",
        "status": "active",
        "email": "member" + participation + ".somalia@olebell.org",
        "visits": 0,
        "BirthDate": "01/01/1985"
      });
    }
  }
  members.bulk({"docs":defaultMembers}, function(err, res) {
    if (err)
      return console.log(err);
    else {
    var memberarr = [];
      for(var course = 0; course < res.length; course++){
        memberarr.push(res[course].id);
        course_number = course + 1;
        var subjectLevel;
        var gradelevel;
        if (course <=3){
            subjectLevel = "Amateur";
            gradelevel = "Higher"
        }else if(course>=4 && course<=8){
            subjectLevel = "Mid";
            gradelevel="10"
        }else{
            subjectLevel = "Beginner";
            gradelevel="5"
        }

        defaultCourses.push({
            "CourseTitle": "Course " +course_number,
            "Day": "0",
            "backgroundColor": "",
            "courseLeader": "",
            "description": "This is Course " +course_number+" .",
            "endDate": "12/12/2017",
            "endTime": "17:00",
            "foregroundColor": "",
            "gradeLevel": gradelevel,
            "kind": "Course",
            "languageOfInstruction": "English",
            "location": "Alberta",
            "memberLimit": "20",
            "members": memberarr,
            "method": "Theory and Practical",
            "name": "Course " +course_number,
            "startDate": "01/01/2017",
            "startTime": "10:00",
            "subjectLevel": subjectLevel
        });
      }
      //insert into courses

      courses.bulk({"docs":defaultCourses}, function(err, res) {
        if (err)
            return console.log(err);
        else{
        for(var steps = 0; steps < n_steps; steps++){
          for(var courselist = 0; courselist < res.length; courselist++){

              defaultCoursestep.push({
                "courseId": res[courselist].id,
                "description": "This is course step "+ (steps+1),
                "kind": "Course Step",
                "passingPercentage": "30",
                "resourceTitles":[],
                "resourceId":[],
                "questionslist":[],
                "step": steps+1,
                "stepGoals": "Knowledge",
                "stepMethod": "Theory",
                "title": "Course Step "+ (steps+1),
                "totalMarks": "100"
            });
          }
        }
          //insert into coursestep
            coursestep.bulk({"docs":defaultCoursestep},function(err,res){
                if(err){
                    console.log(err);
                }else{
                    for(var steplist = 0; steplist<res.length; steplist++){
                        //insert into coursequestion
                        defaultCoursequestion.push({
                            "CorrectAnswer":  [
                                                   "Charles Babbages",
                                              ],
                            "Options": [
                                           "Sachin Maharjan",
                                           "Rupesh Manandhar",
                                           "Charles Babbage",
                                           "Stefan Unchester"
                                        ],
                            "Statement": "What is father of computer" +" ?",
                            "Type": "Multiple Choice",
                            "courseId": defaultCoursestep[steplist].courseId,
                            "kind": "coursequestion",
                            "stepId" : res[steplist].id,
                            "Marks" : 10
                        });
                        defaultCoursequestion.push({
                                "Statement": "What is programming language"+" ?",
                                "Type": "Comment/Essay Box",
                                "courseId": defaultCoursestep[steplist].courseId,
                                "kind": "coursequestion",
                                "stepId" : res[steplist].id,
                                "Marks" : 10
                        });

                        defaultCoursequestion.push({
                            "Statement": "Attach Summer Project" +".",
                            "Type": "Attachment",
                            "courseId": defaultCoursestep[steplist].courseId,
                            "kind": "coursequestion",
                            "stepId" : res[steplist].id,
                            "Marks" : 10
                        });

                        defaultCoursequestion.push({
                            "Statement": "Full form of IDE" +".",
                            "Type": "Single Textbox",
                            "courseId": defaultCoursestep[steplist].courseId,
                            "kind": "coursequestion",
                            "stepId" : res[steplist].id,
                            "Marks" : 10
                        });
                    }
                    console.log(defaultCoursequestion)
                    coursequestion.bulk({"docs":defaultCoursequestion}, function(err, res) {
                        if (err)
                            return console.log(err);
                        else {
                          done();
                        }
                    });
                }
            });
        }
      });
    }
  });
}

function done(){
    console.log("done");
}
start()